import cv2
import numpy as np

# Load the SVM detector from the 'pedestrians.svm' file
svmdetector = cv2.imread('pedestrians.svm')

# Initialize the HOG descriptor
hog = cv2.HOGDescriptor()
hog.setSVMDetector(svmdetector)

# Capture video from laptop camera
cap = cv2.VideoCapture(0)

# Check if camera is opened successfully
if not cap.isOpened():
    print("Error opening video capture")
    exit()

# Define a function to detect humans in a frame
def detect_humans(frame):
    # Resize the frame to a standard size
    frame = cv2.resize(frame, (640, 480))

    # Convert the frame to grayscale
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    # Detect humans in the frame
    (rects, weights) = hog.detectMultiScale(gray, winStride=(4, 4), padding=(8, 8), scale=1.05)

    # Draw bounding boxes around the detected humans
    for (x, y, w, h), weight in zip(rects, weights):
        cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)

    # Display the frame with bounding boxes
    cv2.imshow('Human Detection', frame)

# Capture frames from the video stream
while True:
    # Read the current frame
    ret, frame = cap.read()

    # If the frame was not read successfully, break the loop
    if not ret:
        break

    # Detect humans in the current frame
    detect_humans(frame)

    # Check if the 'q' key was pressed to quit the program
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release the video capture object
cap.release()

# Close all open windows
cv2.destroyAllWindows()
